<?xml version='1.0'?>
<rules xmlns="http://www.loc.gov/bf2marc"
       xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
       xmlns:bf="http://id.loc.gov/ontologies/bibframe/"
       xmlns:bflc="http://id.loc.gov/ontologies/bflc/"
       xmlns:madsrdf="http://www.loc.gov/mads/rdf/v1#"
       xmlns:marc="http://www.loc.gov/MARC21/slim"
       xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <df tag="210">
    <context xpath="rdf:RDF/bf:Instance/bf:title/*[local-name() = 'AbbreviatedTitle' or child::rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']]">
      <ind1 default="1"/>
      <ind2 default="0">
        <switch>
          <case test="bf:source/bf:Source/rdf:value = 'issnkey'"><text> </text></case>
        </switch>
      </ind2>
      <sf code="a" repeatable="false">
        <switch>
          <case test="bf:mainTitle"><select xpath="bf:mainTitle"/></case>
          <case test="rdfs:label"><select xpath="rdfs:label"/></case>
        </switch>
      </sf>
      <sf code="b" repeatable="false">
        <select xpath="bf:qualifier">
          <transform>
            <xsl:value-of select="concat('(',.,')')"/>
          </transform>
        </select>
      </sf>
      <sf code="2">
        <select xpath="bf:source/bf:Source/rdfs:label"/>
      </sf>
    </context>
  </df>

  <df tag="222">
    <context xpath="rdf:RDF/bf:Instance/bf:title/*[local-name() = 'KeyTitle' or child::rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/KeyTitle']]">
      <ind1 default=" "/>
      <ind2 default="0">
        <switch>
          <case test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(rdfs:label))">
            <transform>
              <xsl:value-of select="string-length(rdfs:label) - string-length(bflc:titleSortKey)"/>
            </transform>
          </case>
        </switch>
      </ind2>
      <sf code="a" repeatable="false">
        <switch>
          <case test="bf:mainTitle"><select xpath="bf:mainTitle"/></case>
          <case test="rdfs:label"><select xpath="rdfs:label"/></case>
        </switch>
      </sf>
      <sf code="b" repeatable="false">
        <select xpath="bf:qualifier">
          <transform>
            <xsl:value-of select="concat('(',.,')')"/>
          </transform>
        </select>
      </sf>
      <sf code="2">
        <select xpath="bf:source/bf:Source/rdfs:label"/>
      </sf>
    </context>
  </df>

  <df tag="245" repeatable="false">
    <context xpath="rdf:RDF/bf:Instance/bf:title/bf:Title[not(child::rdf:type)]">
      <ind1 default="1"/>
      <ind2 default="0">
        <switch>
          <case test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(rdfs:label))">
            <transform>
              <xsl:value-of select="string-length(rdfs:label) - string-length(bflc:titleSortKey)"/>
            </transform>
          </case>
        </switch>
      </ind2>
      <sf code="a" repeatable="false">
        <switch>
          <case test="bf:mainTitle"><select xpath="bf:mainTitle"/></case>
          <case test="rdfs:label"><select xpath="rdfs:label"/></case>
        </switch>
      </sf>
      <sf code="b" repeatable="false">
        <select xpath="bf:subtitle"/>
      </sf>
      <sf code="c" repeatable="false">
        <select xpath="ancestor::bf:Instance/bf:responsibilityStatement"/>
      </sf>
      <sf code="n">
        <select xpath="bf:partNumber"/>
      </sf>
      <sf code="p">
        <select xpath="bf:partName"/>
      </sf>
    </context>
  </df>

</rules>
